dehart <- read.table("DeHartSimplified.csv", header = TRUE, sep = ",", na.strings = " ")
head(dehart)

# Reducir los datos para los ejemplos
saturday <- dehart[dehart$dayweek == 6, c(1,4,7,8)] 
head(round(x = saturday, digits = 3))
#solo 89 filas tienen registro a sabado dayweek = 6
dim(saturday)

#####################################################################
# Usar los eventos negativos para estimar el nÃºmero de bebidas

# Ajuste del modelo
mod.neg <- glm(formula = numall ~ negevent, family = poisson(link = "log"), data = saturday)

# AnÃ¡lisis del ajuste del modelo
summary(mod.neg)
100*(exp(mod.neg$coefficients[2]) - 1) #si el evento negativo crece el consumo de bebidas disminuye aproximadamente en un 23%
beta1.int <- confint(mod.neg, parm = "negevent", level = 0.95)
100*(exp(beta1.int) - 1)
library(car)
Anova(mod.neg)

# GrÃ¡fica de los datos y media estimada
x11(height = 6, width = 7, pointsize = 15)
# pdf(file = "c:\\figures\\Figure4.5color.pdf", width = 7, height = 6, colormodel = "cmyk", pointsize = 15)   # Create plot for book
plot(x = saturday$negevent, y = saturday$numall, xlab = "Ãndice de eventos negativos", ylab = "Bebidas alcohÃ³licas consumidas")
curve(expr = exp(mod.neg$coefficients[1] + x*mod.neg$coefficients[2]), add = TRUE, lwd = 2)

#####################################################################
# Usar eventos positivos y negativos para estimar el nÃºmero de bebidas

# Ajuste y anÃ¡lisis del modelo de NEG vs. POS e interacciones
mod.negpos <- glm(formula = numall ~ negevent*posevent, family = poisson(link = "log"), data = saturday)
summary(mod.negpos)
confint(mod.negpos)
Anova(mod.negpos)

x1 <- seq(from = 0, to = 2.5, by = .01)
y1 <- seq(from = 0, to = 3.5, by = .01)
xy1 <- data.frame(expand.grid(negevent = x1, posevent = y1))

surface = matrix(predict(object = mod.negpos, newdata = xy1, type = "response"), nrow = length(x1))

x11(height = 6, width = 7, pointsize = 15)
# pdf(file = "c:\\figures\\Figure4.6-1BW.pdf", width = 7, height = 6, colormodel = "cmyk", pointsize = 15)   # Create plot for book
drink.colors <- gray(1 - saturday$numall/max(saturday$numall))
plot(x = saturday$negevent, y = saturday$posevent, xlim = c(0,2.5), ylim = c(0,3.5), xlab = "Ãndice de eventos negativos", ylab = "Ãndice de eventos positivos", pch = 21, bg = drink.colors, cex = 1.5, main = "NÃºmero de bebidas vs. Eventos positivos y negativos")
contour(x = x1, y = y1, z = surface, xlim = c(0,2.5), ylim = c(0,3.5), labcex = 1, levels = c(1,2,3,4,5,6,7,8,9,10,15,20,30,40,50,60,80), add = TRUE)
# dev.off()  
install.packages("rgl")
library(rgl)
open3d()
persp3d(x = x1, y = y1, z  =  surface, col = "red", xlab = "Ãndice de eventos negativos", ylab = "Ãndice de eventos positivos", zlab = "PredicciÃ³n de Bebidas")
points3d(x = saturday$negevent, y = saturday$posevent, z = saturday$numall, col = "blue")

# GrÃ¡fica de los datos y media estimada en los cuartiles de POSEVENT
posev.quart <- summary(saturday$posevent)
posev.quart

x11(height = 6, width = 7, pointsize = 15)
# pdf(file = "c:\\figures\\Figure4.6-2BW.pdf", width = 7, height = 6, colormodel = "cmyk", pointsize = 15)   # Create plot for book
posev.colors <- gray(1 - saturday$posevent/max(saturday$posevent))

plot(x = saturday$negevent, y = saturday$numall, xlab = "Ãndice de eventos negativos", ylab = "Bebidas alcohÃ³licas consumidas", pch = 21, bg = posev.colors, cex = 1.5, main = "NÃºmero de bebidas vs. Eventos negativos")
curve(expr = exp(mod.negpos$coefficients[1] + x*mod.negpos$coefficients[2] + posev.quart[2]*mod.negpos$coefficients[3] + x*posev.quart[2]*mod.negpos$coefficients[4]), add = TRUE, lwd = 2)
curve(expr = exp(mod.negpos$coefficients[1] + x*mod.negpos$coefficients[2] + posev.quart[3]*mod.negpos$coefficients[3] + x*posev.quart[3]*mod.negpos$coefficients[4]), add = TRUE, lty = "dashed", lwd = 2)
curve(expr = exp(mod.negpos$coefficients[1] + x*mod.negpos$coefficients[2] + posev.quart[5]*mod.negpos$coefficients[3] + x*posev.quart[5]*mod.negpos$coefficients[4]), add = TRUE, lty = "dotted", lwd = 2)
legend(x = 1.0, y = 20, legend = c("1st", "2nd", "3rd"), lty = c("solid", "dashed", "dotted"), lwd = 2, title = "Cuartil de Ã­ndice de eventos positivos", bty = "n")
# dev.off()  

mean.ratio <- exp(mod.negpos$coefficients[2] + posev.quart[c(2,3,5)]*mod.negpos$coefficients[4])
mean.ratio
100*(mean.ratio - 1)# un cambio en el número de eventos negativos como modifica el indice de bebidas si dejamos el número de eventos positivos constante

library(package = mcprofile)
K <- matrix(data = c(0, 1, 0, 1*posev.quart[2],
                     0, 1, 0, 1*posev.quart[3],
                     0, 1, 0, 1*posev.quart[5]), nrow = 3, ncol = 4, byrow = TRUE)
linear.combo <- mcprofile(object = mod.negpos, CM = K)  #Calculate -2log(Lambda)
ci.beta <- confint(object = linear.combo, level = 0.95)
# ci.beta$confint
#porcentaje de cambio para cada cuartil
100*(exp(ci.beta$estimate) - 1) 
#intervalos de confianza si aumentamos un punto el indice de eventos negativos disminuiria en el primer cuartil ente un 68%-23%
100*(exp(ci.beta$confint) - 1)



###########
alldata <- read.table(file = "C:\\data\\BirdCounts.csv", sep = ",", header = TRUE)
head(alldata)
contrasts(alldata$Loc)

# Ajustar regresiÃ³n de Poisson y probar si todas las medias son iguales
M1 <- glm(formula = Birds ~ Loc, family = poisson(link = "log"), data = alldata)
summary(M1)
#Solo el beta 0 muestra la media en el límite nivel 1 los demas son la diferencia de las medias
M1$coefficients 
exp(M1$coefficients) 

# Obtener predicciones de las medias
pred.data <- data.frame(Loc = c("ForA", "ForB", "Frag", "Edge", "PasA", "PasB"))
means <- predict(object = M1, newdata = pred.data, type = "link", se.fit = TRUE)
alpha <- 0.05

# Intervalo de confianza de Wald
lower.logmean <- means$fit + qnorm(alpha/2)*means$se.fit
upper.logmean <- means$fit + qnorm(1 - alpha/2)*means$se.fit

# Uniendo resultados
mean.wald.ci <- data.frame(pred.data, round(cbind(exp(means$fit), exp(lower.logmean), exp(upper.logmean)), digits = 2))
colnames(mean.wald.ci) <- c("Location", "Mean", "Lower", "Upper")
mean.wald.ci

# Para probar "todas las medias son iguales" vs. "no todas las medias son iguales"
# library(car)
#Monstrar si P<0.05 las medias son diferentes
anova(M1, test ="Chisq")

######################################################################
# Obtener intervalos LR para las medias.  
library(mcprofile)
K <- matrix(data = c(1, 1, 0, 0, 0, 0,
                     1, 0, 1, 0, 0, 0,
                     1, 0, 0, 1, 0, 0,
                     1, 0, 0, 0, 0, 0,
                     1, 0, 0, 0, 1, 0,
                     1, 0, 0, 0, 0, 1), nrow = 6, ncol = 6, byrow = TRUE)
K

linear.combo <- mcprofile(object = M1, CM = K)
ci.log.mu <- confint(object = linear.combo, level = 0.95, adjust = "none")

mean.LR.ci1 <- data.frame(Loc = pred.data, Estimate = exp(ci.log.mu$estimate), Lower = exp(ci.log.mu$confint[,1]), Upper = exp(ci.log.mu$confint[,2]))
mean.LR.ci1

mean.LR.ci1$Loc2 <- factor(mean.LR.ci1$Loc, levels = levels(mean.LR.ci1$Loc)[c(2,3,4,1,5,6)])

# GrÃ¡fica
x11(width = 7, height = 5, pointsize = 12)   
# pdf(file = "c:\\figures\\Figure4.7color.pdf", width = 7, height = 5, colormodel = "cmyk")   
stripchart(Lower ~ Loc2, data = mean.LR.ci1, vertical = FALSE, xlim = c(20,150), col = "red", pch = "(", main = "", xlab = "Bird Count", ylab = "Location")
stripchart(Upper ~ Loc2, data = mean.LR.ci1, vertical = FALSE, col = "red", pch = ")", add = TRUE)
stripchart(Estimate ~ Loc2, data = mean.LR.ci1, vertical = FALSE, col = "red", pch = "+", add = TRUE)
grid(nx = NA, ny = NULL, col = "gray", lty = "dotted")
abline(v = mean(alldata$Birds), col = "darkblue", lwd = 4)
# dev.off()  

#####################################################################
# Intervalos de confianza para combinaciones lineales de los parÃ¡metros

# Coeficientes para las combinaciones lineales
contr.mat <- rbind(c(0,.5,.5,0,0,0), c(0,.5,.5,-1,0,0), c(0,.5,.5,0,-.5,-.5), 
                   c(0,0,0,1,0,0), c(0,0,0,1,-.5,-.5), c(0,0,0,0,-.5,-.5))
rownames(contr.mat) <- c("For-Edge", "For-Frag", "For-Past", "Frag-Edge", "Frag-Past", "Edge-Past")
contr.mat
